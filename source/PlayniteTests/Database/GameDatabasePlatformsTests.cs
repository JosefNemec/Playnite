using Moq;
using NUnit.Framework;
using Playnite;
using Playnite.Database;
using Playnite.SDK.Models;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PlayniteTests.Database
{
    [TestFixture]
    public class GameDatabasePlatformsTests
    {
        private string dbPath = Path.Combine(PlayniteTests.TempPath, "platformstest.db");

        [SetUp]
        public void Init()
        {
            FileSystem.DeleteFile(dbPath);
        }

        [Test]
        public void PlatformRemovalTest()
        {
            var db = new GameDatabase(null);
            using (db.OpenDatabase(dbPath))
            {
                var platform = new Platform("Test");
                db.AddPlatform(platform);
                var game = new Game("Test")
                {
                    PlatformId = platform.Id
                };

                db.AddGame(game);
                db.RemovePlatform(platform);
                var dbGame = db.GamesCollection.FindById(game.Id);
                Assert.AreEqual(Guid.Empty, dbGame.PlatformId);
                CollectionAssert.IsEmpty(db.PlatformsCollection.Find(a => a.Name == "Test"));
            }
        }

        [Test]
        public void PcPlatformAutoAssignTest()
        {
            var db = new GameDatabase();
            using (db.OpenDatabase(dbPath))
            {
                // Remove PC platform first, might get autogenerated with clean DB
                var pl = db.PlatformsCollection.FindOne(a => a.Name == "PC");
                if (pl != null)
                {
                    db.RemovePlatform(pl);
                    Assert.IsNull(db.PlatformsCollection.FindOne(a => a.Name == "PC"));
                }

                var game = new Game()
                {
                    GameId = "testid",
                    Name = "Test Game"
                };

                db.AddGame(game);
                db.AssignPcPlatform(game);
                var pcPlatform = db.PlatformsCollection.FindOne(a => a.Name == "PC");
                Assert.IsNotNull(pcPlatform);
                Assert.AreEqual(game.PlatformId, pcPlatform.Id);
            }
        }
    }
}
