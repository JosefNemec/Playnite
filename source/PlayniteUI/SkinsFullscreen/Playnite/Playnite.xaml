<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:pc="clr-namespace:PlayniteUI.Controls;assembly=PlayniteUI"
                    xmlns:pui="clr-namespace:PlayniteUI;assembly=PlayniteUI"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:shared="clr-namespace:Playnite;assembly=Playnite"
                    mc:Ignorable="d">
    
    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>

    <Color x:Key="TextColor">#f2f2f2</Color>
    <Color x:Key="TextColorDarker">#a3a3a3</Color>
    <Color x:Key="TextColorDark">#000000</Color>
    <Color x:Key="MainColor">#4c4c4c</Color>
    <Color x:Key="MainColorDark">#252422</Color>
    <Color x:Key="HoverColor">#247BA0</Color>
    <Color x:Key="DefaultColor">#FF9BB1C5</Color>
    <Color x:Key="GlyphColor">#019fcb</Color>
    <Color x:Key="PopupBackgroundColor">#171e26</Color>
    <Color x:Key="PopupBorderColor">#3e6184</Color>
    <Color x:Key="BackgroundToneColor">#182028</Color>

    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource TextColor}" />
    <SolidColorBrush x:Key="TextBrushDarker" Color="{DynamicResource TextColorDarker}" />
    <SolidColorBrush x:Key="TextBrushDark" Color="{DynamicResource TextColorDark}" />
    <SolidColorBrush x:Key="NormalBrush" Color="{DynamicResource MainColor}" />
    <SolidColorBrush x:Key="NormalBrushDark" Color="{DynamicResource MainColorDark}" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="{DynamicResource MainColor}" />
    <SolidColorBrush x:Key="HoverBrush" Color="{DynamicResource GlyphColor}" />
    <SolidColorBrush x:Key="GlyphBrush" Color="{DynamicResource GlyphColor}" />
    <SolidColorBrush x:Key="PopupBorderBrush" Color="{DynamicResource PopupBorderColor}" />
    <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{DynamicResource BackgroundToneColor}" />

    <sys:Double x:Key="FontSize">14</sys:Double>
    <FontFamily x:Key="FontFamily">Trebuchet MS</FontFamily>
    <Thickness x:Key="PopupBorderThickness">1</Thickness>
    <Thickness x:Key="ControlBorderThickness">1</Thickness>
    <sys:Double x:Key="EllipseBorderThickness">1</sys:Double>
    <CornerRadius x:Key="ControlCornerRadius">0</CornerRadius>

    <Image x:Key="BackImage" Source="{Binding ConverterParameter='Icons/Xbox/B.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant" />
    <Image x:Key="InstallImage" Source="{Binding ConverterParameter='Icons/Xbox/A.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="PlayImage" Source="{Binding ConverterParameter='Icons/Xbox/A.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="DetailsImage" Source="{Binding ConverterParameter='Icons/Xbox/X.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="DeleteImage" Source="{Binding ConverterParameter='Icons/Xbox/X.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="SearchImage" Source="{Binding ConverterParameter='Icons/Xbox/Y.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="ClearFiltersImage" Source="{Binding ConverterParameter='Icons/Xbox/LB.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="ToggleSorting" Source="{Binding ConverterParameter='Icons/Xbox/RB.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />

    <Image x:Key="CancelImage" Source="{Binding ConverterParameter='Icons/Xbox/B.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="ConfirmImage" Source="{Binding ConverterParameter='Icons/Xbox/RB.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="ClearImage" Source="{Binding ConverterParameter='Icons/Xbox/LB.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />
    <Image x:Key="BackspaceImage" Source="{Binding ConverterParameter='Icons/Xbox/X.png', Converter={pui:SkinMediaPathConverter}}"
           RenderOptions.BitmapScalingMode="Fant"  />

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    
    <LinearGradientBrush x:Key="WindowBackgourndBrush" StartPoint="0.5,0.0" EndPoint="1,1" >
        <GradientStop Color="#AA1F2933" Offset="0"/>
        <GradientStop Color="#BB1F2933" Offset="0.2"/>
    </LinearGradientBrush>

    <Style x:Key="HighlightBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseStyle" TargetType="Control">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{DynamicResource NormalBrushDark}" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                            CornerRadius="{DynamicResource ControlCornerRadius}" Style="{DynamicResource HighlightBorder}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BottomButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="15,8,15,8" />
        <Setter Property="MinWidth" Value="70" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" CornerRadius="{DynamicResource ControlCornerRadius}"
                            Style="{DynamicResource HighlightBorder}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                      HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" Value="0.8"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="Opacity" Value="0.3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle x:Name="HoverRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                   Width="Auto" Height="Auto" RadiusX="3" RadiusY="4"
                                   Stroke="{x:Null}" Margin="4.5,1,4.5,1" MinHeight="10"
                                   Fill="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource GlyphBrush}" TargetName="HoverRectangle" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Track x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="True"
                           Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Track.Resources>
                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">42</sys:Double>
                        </Track.Resources>
                        <Track.Thumb>
                            <Thumb />
                        </Track.Thumb>
                    </Track>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="PART_Track">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1" Grid.Row="0"
                                                Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <Rectangle Grid.Column="0" Grid.Row="1" Fill="{DynamicResource ControlBackgroundBrush}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                   Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="0" Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                   AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <!--<Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="CheckBox">
                    <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" />
                </Style>
            </Setter.Value>
        </Setter>-->        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Border x:Name="BulletBorder" CornerRadius="{DynamicResource ControlCornerRadius}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                    Style="{DynamicResource HighlightBorder}" >
                                <Grid Width="18" Height="18" Background="{DynamicResource NormalBrushDark}">
                                    <Viewbox x:Name="CheckIcon" Visibility="Collapsed">
                                        <TextBlock Text="b" FontFamily="Marlett" Foreground="{DynamicResource GlyphBrush}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Viewbox>
                                    <Viewbox x:Name="IndeterminateIcon" Visibility="Collapsed" Margin="2">
                                        <TextBlock Text="g" FontFamily="Marlett" Foreground="{DynamicResource GlyphBrush}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Viewbox>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsThreeState" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="IndeterminateIcon"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckIcon" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="BulletBorder" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="BulletBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrushDark}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}"/>
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource NormalBorderBrush}"
                            CornerRadius="{DynamicResource ControlCornerRadius}">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Rectangle Fill="{TemplateBinding Background}" />
                            <Rectangle Name="PART_Track" Margin="0" />
                            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                                <Grid>
                                    <Rectangle Fill="{TemplateBinding Foreground}" />
                                    <Grid x:Name="Animation" Visibility="Hidden">
                                        <Rectangle Fill="{TemplateBinding Background}" Margin="0,0,50,0">
                                            <Rectangle.RenderTransform>
                                                <ScaleTransform x:Name="HiderPreTransform" ScaleX="0"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Background}" RenderTransformOrigin="1, 0" Margin="50,0,0,0">
                                            <Rectangle.RenderTransform>
                                                <ScaleTransform x:Name="HiderPostTransform" ScaleX="1" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </Decorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="HiderPreTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0:00:4" AutoReverse="True"/>
                                        <DoubleAnimation Storyboard.TargetName="HiderPostTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                         To="0" Duration="0:00:4" AutoReverse="True"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StandardWindowStyle" TargetType="pc:WindowBase">
        <Setter Property="Background" Value="{DynamicResource WindowBackgourndBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="0" CornerRadius="4" ResizeBorderThickness="0"
                              NonClientFrameEdges ="None" UseAeroCaptionButtons="False" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:WindowBase}">
                    <Border x:Name="WindowBorder" BorderBrush="{DynamicResource PopupBorderBrush}" CornerRadius="0"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="20">
                        <Grid>
                            <ContentPresenter Margin="0,0,0,0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FullscreenWindowStyle" TargetType="pc:WindowBase">
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="WindowChrome.WindowChrome">            
            <Setter.Value>
                <WindowChrome CaptionHeight="0" CornerRadius="0" ResizeBorderThickness="0"
                              NonClientFrameEdges ="None" UseAeroCaptionButtons="False" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:WindowBase}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>                
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding IsActive, Source={x:Static pui:App.Current}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="0.3" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="KeyboardButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource NormalBrushDark}" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,2,10,2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="FontSize" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                            CornerRadius="0" Style="{DynamicResource HighlightBorder}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                <Setter Property="Background" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                <Setter Property="Background" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="GameDetailsView">
        <Grid Margin="50" DataContext="{Binding SelectedGame, Mode=OneWay}">
            <Grid.Resources>
                <pui:BindingProxy x:Key="Proxy" Data="{Binding}" />
                <pui:CustomImageStringToImageConverter x:Key="CustomImageStringToImageConverter" />
                <pui:EnumerableNullOrEmptyToVisibilityConverter x:Key="EnumerableNullOrEmptyToVisibilityConverter" />
                <pui:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
                <pui:NullableDateToStringConverter x:Key="NullableDateToStringConverter" />
                <pui:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter" />
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <TextBlock Text="{Binding DisplayName}"
                       Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"                        
                       FontSize="50" Margin="20,20,0,0" TextWrapping="Wrap"
                       DockPanel.Dock="Left" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}">
                <TextBlock.Effect>
                    <DropShadowEffect ShadowDepth="4" Color="Black"/>
                </TextBlock.Effect>
            </TextBlock>            

            <Grid Grid.Column="0"  Grid.Row="1" Margin="20,50,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                        <Setter Property="FontSize" Value="40" />
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="4" Color="Black"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <TextBlock Text="{DynamicResource LOCTimePlayed}" Foreground="{DynamicResource GlyphBrush}"
                           Grid.Column="0" Grid.Row="0" Margin="0,0,10,3" />
                <TextBlock Text="{Binding Game.Playtime, Converter={pui:LongToTimePlayedConverter}}"
                           Grid.Column="0" Grid.Row="1" />
                <TextBlock Text="{DynamicResource LOCLastPlayed}" Foreground="{DynamicResource GlyphBrush}" 
                           Grid.Column="1" Grid.Row="0" Margin="50,0,0,0" />
                <TextBlock Text="{Binding Game.LastActivity, Converter={pui:DateTimeToLastPlayedConverter}}"
                           Grid.Column="1" Grid.Row="1" Margin="50,0,0,0" />
            </Grid>

            <pc:HtmlTextView Grid.Column="0" Grid.Row="2" Margin="10,50,0,0"                         
                            Background="Transparent" HtmlText="{Binding Description, Mode=OneWay}"
                            HtmlFontSize="20"
                            HtmlForeground="{DynamicResource TextColor}"
                            LinkForeground="{DynamicResource GlyphColor}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ListViewItem" x:Key="ImageCoverItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             From="1" To="1.06" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleY"
                                                             From="1" To="1.06" Duration="0:0:0.2"/>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             From="1.06" To="1" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleY"
                                                             From="1.06" To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent" Margin="10">
                        <Grid.Effect>
                            <DropShadowEffect RenderingBias="Performance" BlurRadius="20" Color="Black" />
                        </Grid.Effect>
                        <Border x:Name="SelectionBorder" SnapsToDevicePixels="True" BorderThickness="5"
                                            CornerRadius="4"
                                            Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center"
                                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <ContentPresenter />
                                <Border Background="#99000000" x:Name="TextGameName" Visibility="Collapsed">
                                    <TextBlock Text="{Binding DisplayName, Mode=OneWay}" TextWrapping="Wrap" Margin="5"
                                                           Style="{StaticResource BaseTextBlockStyle}"
                                                           TextTrimming="CharacterEllipsis" TextAlignment="Center"
                                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                                           FontSize="28"/>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Image}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" TargetName="TextGameName"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="SelectionBorder"/>
                            <Setter Property="Canvas.ZIndex" Value="90" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="GamesList">
        <ControlTemplate.Resources>
            <pui:CustomImageStringToImageConverter x:Key="CustomImageStringToImageConverter" />
            <pui:WidthToFontSizeConverter x:Key="WidthToFontSizeConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <pui:NullToDependencyPropertyUnsetConverter x:Key="NullToDependencyPropertyUnsetConverter" />
        </ControlTemplate.Resources>
        <ListView x:Name="test"
                  pui:FocusBahaviors.OnVisibilityFocus="True"
                  ScrollViewer.PanningMode="VerticalOnly"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  SelectionMode="Single" DockPanel.Dock="Top"
                  pui:ScrollToSelectedBehavior.Enabled="True" BorderThickness="0"
                  ItemsSource="{Binding GamesView.CollectionView}"
                  SelectedItem="{Binding SelectedGame, Mode=TwoWay}"
                  ItemContainerStyle="{StaticResource ImageCoverItem}"
                  Background="Transparent" Margin="20,40,20,0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick" >
                    <i:InvokeCommandAction Command="{Binding StartGameCommand}"
                                           CommandParameter="{Binding SelectedGame.Game}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.Resources>
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>                
            </ListView.Resources>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Image RenderOptions.BitmapScalingMode="Fant" StretchDirection="Both">
                        <Image.Source>
                            <PriorityBinding>
                                <Binding Path="ImageObject" Mode="OneWay" Converter="{StaticResource NullToDependencyPropertyUnsetConverter}" />
                                <Binding Path="DefaultImageObject" Mode="OneWay" />
                            </PriorityBinding>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <pui:VirtualizingGridPanel>
                        <pui:VirtualizingGridPanel.Style>
                            <Style TargetType="pui:VirtualizingGridPanel">
                                <Setter Property="Columns" Value="{Binding AppSettings.FullscreenSettings.ColumnCount}" />
                                <Setter Property="Rows" Value="{Binding AppSettings.FullscreenSettings.RowCount}" />
                                <Setter Property="Margin" Value="20" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowGameDetails}" Value="True">
                                        <Setter Property="Columns" Value="1" />
                                        <Setter Property="Rows" Value="{Binding AppSettings.FullscreenSettings.DetailsRowCount}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </pui:VirtualizingGridPanel.Style>
                    </pui:VirtualizingGridPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
    </ControlTemplate>

    <ControlTemplate x:Key="CommandPanel">
        <Grid>
            <Grid.Resources>
                <Style TargetType="Button" x:Key="CommandButton">
                    <Setter Property="VerticalAlignment" Value="Top" />
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Margin" Value="20,0,0,0" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="Transparent">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="30" />
                    <Setter Property="Margin" Value="20,0,0,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="ContentControl">
                    <Setter Property="Height" Value="40" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Button Grid.Column="0" Grid.Row="0"
                    Visibility="{Binding AppSettings.FullScreenFilterSettings.Active, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding ClearFiltersCommand}" Style="{StaticResource CommandButton}"
                    HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource ClearFiltersImage}" />
                    <TextBlock Text="{DynamicResource LOCClearFilters}" />
                </StackPanel>
            </Button>
            <Button Grid.Column="1" Grid.Row="0"
                    Visibility="{Binding ShowInstallOption, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding StartGameCommand}" Style="{StaticResource CommandButton}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource InstallImage}" />
                    <TextBlock Text="{DynamicResource LOCInstallGame}" />
                </StackPanel>
            </Button>
            <Button Grid.Column="1" Grid.Row="0"
                    Visibility="{Binding ShowPlayOption, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding StartGameCommand}" Style="{StaticResource CommandButton}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource PlayImage}" />
                    <TextBlock Text="{DynamicResource LOCPlayGame}" />
                </StackPanel>
            </Button>
            <Button Grid.Column="2" Grid.Row="0"
                    Visibility="{Binding ShowDetailsOption, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding ToggleGameDetailsCommand}" Style="{StaticResource CommandButton}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource DetailsImage}" />
                    <TextBlock Text="{DynamicResource LOCDetailsLabel}" />
                </StackPanel>
            </Button>
            <Button Grid.Column="2" Grid.Row="0"
                    Visibility="{Binding ShowBackOption, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding ToggleGameDetailsCommand}" Style="{StaticResource CommandButton}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource BackImage}" />
                    <TextBlock Text="{DynamicResource LOCBackLabel}" />
                </StackPanel>
            </Button>
            <Button Grid.Column="3" Grid.Row="0"
                    Command="{Binding OpenSearchCommand}" Style="{StaticResource CommandButton}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource SearchImage}" />
                    <TextBlock Text="{DynamicResource LOCSearchLabel}" />
                </StackPanel>
            </Button>
            <Button Grid.Column="4" Grid.Row="0" Margin="20,0,20,0"
                    HorizontalAlignment="Right"
                    Command="{Binding ToggleSortingOrderCommand}" Style="{StaticResource CommandButton}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Content="{DynamicResource ToggleSorting}" />
                    <TextBlock Text="{DynamicResource LOCMenuSortByTitle}" />
                    <TextBlock Text="{Binding AppSettings.FullscreenViewSettings.SortingOrder, StringFormat=': {0}', Converter={pui:SortingOrderToStringConverter}}"
                               Margin="0"/>
                </StackPanel>
            </Button>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="FullscreenView" TargetType="{x:Type pc:FullscreenView}">
        <Viewbox>
            <Grid Width="1920" Height="1080">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <Setter Property="Width" Value="1920"  />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowGameDetails}" Value="True">
                                        <Setter Property="Width" Value="370"  />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <Setter Property="Width" Value="0"  />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowGameDetails}" Value="True">
                                        <Setter Property="Width" Value="1550"  />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1020" />
                    <RowDefinition Height="60" />
                </Grid.RowDefinitions>

                <Image Stretch="UniformToFill" RenderOptions.BitmapScalingMode="Fant"                       
                       HorizontalAlignment="Center" VerticalAlignment="Top"
                       Grid.ColumnSpan="20" Grid.RowSpan="20"
                       Source="{Binding ConverterParameter='background.png', Converter={pui:SkinMediaPathConverter}}" />

                <!--BACKGROUND IMAGE-->
                <Grid Grid.ColumnSpan="20" Grid.RowSpan="20"
                      HorizontalAlignment="Center" VerticalAlignment="Top">
                    <Grid.Resources>
                        <Storyboard x:Key="VisibleOn">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0" To="1" Duration="0:0:0.3"/>
                        </Storyboard>
                        <Storyboard x:Key="VisibleOff">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="1" To="0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </Grid.Resources>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Opacity" Value="0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowGameDetails}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource VisibleOn}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource VisibleOff}" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <pc:FadeImage HorizontalAlignment="Center" VerticalAlignment="Top"
                                  Source="{Binding SelectedGame.BackgroundImageObject, IsAsync=True, Mode=OneWay}" />
                    <Border Background="#88151519" />
                </Grid>

                <!--GAME LIST-->
                <ContentControl Grid.Column="0" Grid.Row="0" Template="{StaticResource GamesList}" />

                <!--GAME DETAILS-->
                <ContentControl Grid.Column="1" DockPanel.Dock="Left"
                                Template="{StaticResource GameDetailsView}" />

                <!--TIME-->
                <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,15,60,0"
                           HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="LightGray"
                           Text="{Binding CurrentTime, Source={x:Static pui:Time.Instance}, Mode=OneWay}"
                           FontSize="32" Style="{DynamicResource BaseTextBlockStyle}">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="3" />
                    </TextBlock.Effect>
                </TextBlock>

                <!--BACKGROUND TASK STATUS-->
                <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="60,0,0,0"
                            Visibility="{Binding ProgressVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Image Source="{Binding ConverterParameter='Icons/loading.png', Converter={pui:SkinMediaPathConverter}}"
                           IsEnabled="{Binding ProgressVisible}"
                           Width="48" Height="48" HorizontalAlignment="Left" VerticalAlignment="Top"
                           RenderTransformOrigin="0.5,0.5" Margin="10">
                        <Image.Resources>
                            <Storyboard x:Key="VisibleOn">
                                <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                 To="360" Duration="0:0:1" RepeatBehavior="Forever" />
                            </Storyboard>
                            <Storyboard x:Key="VisibleOff">
                                <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                 To="0" Duration="0:0:0"/>
                            </Storyboard>
                        </Image.Resources>
                        <Image.RenderTransform>
                            <RotateTransform x:Name="noFreeze" />
                        </Image.RenderTransform>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource VisibleOn}"/>
                                        </MultiTrigger.EnterActions>
                                        <MultiTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource VisibleOff}"/>
                                        </MultiTrigger.ExitActions>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Text="{Binding ProgressStatus}" FontSize="32" Style="{DynamicResource BaseTextBlockStyle}"
                               Margin="10,15,0,0">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="3" />
                        </TextBlock.Effect>
                    </TextBlock>
                </StackPanel>

                <!--NOT FOUND GAMES-->
                <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedGame}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <TextBlock Text="{DynamicResource LOCNoGamesFound}" FontSize="50" Foreground="{DynamicResource TextBrush}"
                               TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="4" Color="Black" />
                        </TextBlock.Effect>
                    </TextBlock>
                    <Border Background="#44000000" />
                </Grid>

                <!--COMMAND PANEL-->
                <Border Background="#44000000" HorizontalAlignment="Stretch"
                        Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
                    <ContentControl Template="{StaticResource CommandPanel}" Margin="5,10,5,10"
                                    Opacity="0.8"/>
                </Border>

                <!--ESCPAE MENU-->
                <Grid Background="#EE000000" Grid.ColumnSpan="2" Grid.RowSpan="2"
                      Visibility="{Binding ShowExitMenu, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                        <Button Height="64" MinWidth="200" Style="{StaticResource KeyboardButton}"
                                pui:FocusBahaviors.OnVisibilityFocus="True"
                                Padding="35,5,35,5"
                                Content="{DynamicResource LOCBackToDesktopMode}" FontSize="30"
                                Margin="0,0,0,25"
                                Command="{Binding SwitchToDesktopModeCommand}"/>
                        <Button Height="64" MinWidth="200" Style="{StaticResource KeyboardButton}"
                                Padding="35,5,35,5"
                                Content="{DynamicResource LOCExitPlaynite}" FontSize="30"
                                Command="{Binding ShutdownCommand}" />
                    </StackPanel>
                </Grid>

                <!--<TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"
                           HorizontalAlignment="Right"
                           FontSize="24" Margin="0,10,40,0" Foreground="LightGray"
                           Text="{Binding Source={x:Static sys:DateTime.Now}}">
                    <TextBlock.Effect>
                        <DropShadowEffect ShadowDepth="4" Color="Black"/>
                    </TextBlock.Effect>
                </TextBlock>-->
            </Grid>
        </Viewbox>
    </ControlTemplate>

    <Style TargetType="{x:Type pc:FullscreenView}">
        <Setter Property="Template" Value="{StaticResource FullscreenView}"/>
        <Setter Property="Focusable" Value="False" />
    </Style>
</ResourceDictionary>
