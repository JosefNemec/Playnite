<c:WindowBase x:Class="PlayniteUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:prism="clr-namespace:Prism.Interactivity;assembly=Prism.Wpf"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:pui="clr-namespace:PlayniteUI"
        xmlns:pset="clr-namespace:Playnite.Settings;assembly=Playnite"
        xmlns:m="clr-namespace:Playnite.SDK.Models;assembly=Playnite.SDK"
        xmlns:c="clr-namespace:PlayniteUI.Controls"
        xmlns:tray="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        d:DesignStyle="{StaticResource WindowDesignStyle}"
        Style="{DynamicResource MainWindowStyle}"
        Title="Playnite" ShowTitle="False" Loaded="Window_Loaded"
        Width="1280" Height="900" WindowStartupLocation="CenterScreen" Icon="/Images/applogo.ico"
        Visibility="{Binding Visibility, Mode=TwoWay}"
        WindowState="{Binding WindowState, Mode=TwoWay}"
        x:Name="WindowMain" AutomationProperties.AutomationId="WindowMain"
        Unloaded="WindowMain_Unloaded"
        AllowDrop="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing" >
            <prism:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Drop" >
            <prism:InvokeCommandAction Command="{Binding FileDroppedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <c:WindowBase.Resources>
        <pui:EnumConverter x:Key="EnumConverter" />
        <pui:OpacityBoolConverter x:Key="OpacityBoolConverter" />
        <pui:NegateConverter x:Key="NegateConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <pui:InvertableBooleanToVisibilityConverter x:Key="InvertableBooleanToVisibilityConverter" />
        <pui:BidirectionalEnumAndNumberConverter x:Key="BidirectionalEnumAndNumberConverter" />
        <pui:CustomImageStringToImageConverter x:Key="CustomImageStringToImageConverter" />
        <sys:Boolean x:Key="True">True</sys:Boolean>
        <sys:Boolean x:Key="False">False</sys:Boolean>
        <pui:ValueConverterGroup x:Key="EnumCompVisibilityConverter">
            <pui:EnumConverter/>
            <BooleanToVisibilityConverter/>
        </pui:ValueConverterGroup>
        <pui:ValueConverterGroup x:Key="EnumCompVisibilityConverterInverted">
            <pui:EnumConverter/>
            <pui:NegateConverter/>
            <BooleanToVisibilityConverter/>
        </pui:ValueConverterGroup>
        <pui:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </c:WindowBase.Resources>

    <c:WindowBase.InputBindings>

    </c:WindowBase.InputBindings>

    <Grid>
        <tray:TaskbarIcon x:Name="TrayPlaynite" ToolTipText="Playnite" IconSource="/Images/applogo.ico"
                          MenuActivation="LeftOrRightClick"
                          Visibility="{Binding Path=EnableTray, Source={x:Static pset:PlayniteSettings.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}"
                          DoubleClickCommand="{Binding Source={StaticResource Proxy}, Path=Data.ShowWindowCommand}">
            <tray:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.StartGameCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                    <ContextMenu.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type m:Game}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Margin="-5,0,5,0" RenderOptions.BitmapScalingMode="Fant">
                                    <Image.Source>
                                        <PriorityBinding>
                                            <Binding Path="Icon" Mode="OneWay" Converter="{StaticResource CustomImageStringToImageConverter}"/>
                                            <Binding Path="DefaultIcon" Mode="OneWay" Converter="{StaticResource CustomImageStringToImageConverter}"/>
                                        </PriorityBinding>
                                    </Image.Source>
                                </Image>
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <Style x:Key="OpenUIItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Header" Value="{DynamicResource LOCOpenPlaynite}" />
                            <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.ShowWindowCommand}" />
                        </Style>
                        <Style x:Key="ExitItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Header" Value="{DynamicResource LOCExitAppLabel}" />
                            <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.ShutdownCommand}" />
                        </Style>
                    </ContextMenu.Resources>
                    <ContextMenu.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer Collection="{Binding Path=LastGames, Source={x:Static pui:App.GamesEditor}}" />
                            <Separator Style="{StaticResource {x:Type Separator}}"/>
                            <MenuItem Style="{StaticResource OpenUIItem}" />
                            <MenuItem Header="{DynamicResource LOCMenuOpenClient}" ItemsSource="{Binding ThirdPartyTools}"
                                      OverridesDefaultStyle="True" Style="{StaticResource {x:Type MenuItem}}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Header" Value="{Binding Name}" />
                                        <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.ThirdPartyToolOpenCommand}" />
                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                            <Separator Style="{StaticResource {x:Type Separator}}"/>
                            <MenuItem Style="{StaticResource ExitItem}"/>
                        </CompositeCollection>
                    </ContextMenu.ItemsSource>
                </ContextMenu>
            </tray:TaskbarIcon.ContextMenu>
        </tray:TaskbarIcon>

        <c:MainView IsTabStop="False" x:Name="ViewMainView">
            <c:MainView.InputBindings>
                <KeyBinding Command="{Binding OpenThemeTesterCommand}" CommandParameter="{StaticResource False}"
                    Key ="{Binding OpenThemeTesterCommand.Gesture.Key}"
                    Modifiers="{Binding OpenThemeTesterCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding UpdateGamesCommand}"
                    Key ="{Binding UpdateGamesCommand.Gesture.Key}"
                    Modifiers="{Binding UpdateGamesCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding OpenSettingsCommand}"
                    Key ="{Binding OpenSettingsCommand.Gesture.Key}"
                    Modifiers="{Binding OpenSettingsCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding OpenFullScreenCommand}"
                    Key ="{Binding OpenFullScreenCommand.Gesture.Key}"
                    Modifiers="{Binding OpenFullScreenCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding ReloadScriptsCommand}"
                    Key ="{Binding ReloadScriptsCommand.Gesture.Key}"
                    Modifiers="{Binding ReloadScriptsCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding AddCustomGameCommand}"
                    Key ="{Binding AddCustomGameCommand.Gesture.Key}"
                    Modifiers="{Binding AddCustomGameCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding OpenAboutCommand}"
                    Key ="{Binding OpenAboutCommand.Gesture.Key}"
                    Modifiers="{Binding OpenAboutCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding ShutdownCommand}"
                    Key ="{Binding ShutdownCommand.Gesture.Key}"
                    Modifiers="{Binding ShutdownCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding DownloadMetadataCommand}"
                    Key ="{Binding DownloadMetadataCommand.Gesture.Key}"
                    Modifiers="{Binding DownloadMetadataCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding OpenPlatformsCommand}"
                    Key ="{Binding OpenPlatformsCommand.Gesture.Key}"
                    Modifiers="{Binding OpenPlatformsCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding AddEmulatedGamesCommand}"
                    Key ="{Binding AddEmulatedGamesCommand.Gesture.Key}"
                    Modifiers="{Binding AddEmulatedGamesCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding OpenSearchCommand}"
                    Key ="{Binding OpenSearchCommand.Gesture.Key}"
                    Modifiers="{Binding OpenSearchCommand.Gesture.Modifiers}" />
                <KeyBinding Command="{Binding ToggleFilterPanelCommand}"
                    Key ="{Binding ToggleFilterPanelCommand.Gesture.Key}"
                    Modifiers="{Binding ToggleFilterPanelCommand.Gesture.Modifiers}" />

                <pui:XInputBinding Button="Guide" Command="{Binding OpenFullScreenCommand}" />
            </c:MainView.InputBindings>
        </c:MainView>
    </Grid>
</c:WindowBase>
