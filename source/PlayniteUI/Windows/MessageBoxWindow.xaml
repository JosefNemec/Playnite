<controls:WindowBase x:Class="PlayniteUI.Windows.MessageBoxWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     
        xmlns:local="clr-namespace:PlayniteUI.Windows"
        xmlns:controls="clr-namespace:PlayniteUI.Controls"
        mc:Ignorable="d"
        d:DesignStyle="{StaticResource WindowDesignStyle}"
        Style="{DynamicResource StandardWindowStyle}"
        x:Name="WindowMessageBox"
        Title="{Binding Caption, ElementName=WindowMessageBox}"
        ShowMinimizeButton="False" ShowMaximizeButton="False" ShowCloseButton="False" MaxWidth="600"
        ResizeMode="NoResize" SizeToContent="WidthAndHeight" WindowStyle="None" WindowStartupLocation="CenterOwner">

    <controls:WindowBase.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </controls:WindowBase.Resources>
    
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Viewbox Grid.Column="0" Grid.Row="0" 
                 MaxWidth="32" MaxHeight="32" Margin="10,10,10,10">
            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisplayIcon, ElementName=WindowMessageBox}" Value="{x:Static MessageBoxImage.None}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayIcon, ElementName=WindowMessageBox}" Value="{x:Static MessageBoxImage.Error}">
                                <Setter Property="Text" Value="❌" />
                                <Setter Property="Foreground" Value="OrangeRed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayIcon, ElementName=WindowMessageBox}" Value="{x:Static MessageBoxImage.Question}">
                                <Setter Property="Text" Value="❔" />
                                <Setter Property="Foreground" Value="DodgerBlue" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayIcon, ElementName=WindowMessageBox}" Value="{x:Static MessageBoxImage.Warning}">
                                <Setter Property="Text" Value="⚠" />
                                <Setter Property="Foreground" Value="Yellow" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayIcon, ElementName=WindowMessageBox}" Value="{x:Static MessageBoxImage.Information}">
                                <Setter Property="Text" Value="❕" />
                                <Setter Property="Foreground" Value="DodgerBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Viewbox>
        <TextBlock Grid.Column="1" Grid.Row="0" Margin="0,10,10,10" Text="{Binding Text, ElementName=WindowMessageBox}"
                   Style="{StaticResource BaseTextBlockStyle}" VerticalAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Stretch"/>
        <TextBox Grid.Row="1" Grid.ColumnSpan="2" Margin="10,10,10,10" Name="TextInputText" Width="400"
                 IsReadOnly="{Binding IsTextReadOnly, ElementName=WindowMessageBox}"
                 Text="{Binding InputText, ElementName=WindowMessageBox}"
                 Visibility="{Binding ShowInputField, ElementName=WindowMessageBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowOKButton, ElementName=WindowMessageBox}" Value="True">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowOKButton, ElementName=WindowMessageBox}" Value="False">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Button Content="{DynamicResource LOCOKLabel}" Style="{StaticResource BottomButton}" Name="ButtonOK" Click="ButtonOK_Click"
                    Visibility="{Binding ShowOKButton, ElementName=WindowMessageBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Button Content="{DynamicResource LOCYesLabel}" Style="{StaticResource BottomButton}" Name="ButtonYes" Click="ButtonYes_Click"
                    Visibility="{Binding ShowYesButton, ElementName=WindowMessageBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Button Content="{DynamicResource LOCNoLabel}" Style="{StaticResource BottomButton}" Name="ButtonNo" Click="ButtonNo_Click"
                    Visibility="{Binding ShowNoButton, ElementName=WindowMessageBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Button Content="{DynamicResource LOCCancelLabel}" Style="{StaticResource BottomButton}" Name="ButtonCancel" Click="ButtonCancel_Click"
                    Visibility="{Binding ShowCancelButton, ElementName=WindowMessageBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>
    </Grid>
</controls:WindowBase>
